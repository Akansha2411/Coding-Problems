/* Given an array of size n, find the majority element. The majority element is the element that appears more than ⌊ n/2 ⌋ times.

You may assume that the array is non-empty and the majority element always exist in the array.

Example 1:

Input: [3,2,3]
Output: 3
Example 2:

Input: [2,2,1,1,1,2,2]
Output: 2 */
// O(n) complexity.
#include<bits/stdc++.h>
using namespace std;
int main()
{
    int n;cin>>n;int arr[n];
    for(int i=0;i<n;i++)cin>>arr[i];
    map<int,int>mp;int res=0;
    for(int i=0;i<n;i++)
    {
        mp[arr[i]]++;
    }
    for(int i=0;i<n;i++)
    {
        if(mp[arr[i]]> n/2)
        {
            res = arr[i];
            break;
        }
        //cout<<mp[arr[i]];
    }
    cout<<res<<'\n';
    return 0;
} 
