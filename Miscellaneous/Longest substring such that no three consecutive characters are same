#include <bits/stdc++.h> 
using namespace std; 

// Function to return the length of the 
// longest substring such that no three 
// consecutive characters are same 
int maxLenSubStr(string& s) 
{ 
	// If the length of the given string 
	// is less than 3 
	if (s.length() < 3) 
		return s.length(); 

	// Initialize temporary and final ans 
	// to 2 as this is the minimum length 
	// of substring when length of the given 
	// string is greater than 2 
	int temp = 2; 
	int ans = 2; //ans will be returned.

	// Traverse the string from the 
	// third character to the last 
	for (int i = 2; i < s.length(); i++)
  { 

		// If no three consecutive characters 
		// are same then increment temporary count 
		if (s[i] != s[i - 1] || s[i] != s[i - 2]) 
			temp++; //length will keep on increasing from 2, with each character mismatch lenght increases by 1.This gives current maximum length.

		// Else update the final ans and 
		// reset the temporary count 
		else 
    { 
			ans = max(temp, ans); //current max in ans, reset temp to 2 , for new traversal.
			temp = 2; 
		} 
	} 

	ans = max(temp, ans); 

	return ans; 
} 

// Driver code 
int main() 
{ 
	string s;cin>>s;

	cout << maxLenSubStr(s); 

	return 0; 
} 

