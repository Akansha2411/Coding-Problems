/* Implement int sqrt(int x).

Compute and return the square root of x, where x is guaranteed to be a non-negative integer.

Since the return type is an integer, the decimal digits are truncated and only the integer part of the result is returned.

Example 1:

Input: 4
Output: 2
Example 2:

Input: 8
Output: 2
Explanation: The square root of 8 is 2.82842..., and since 
             the decimal part is truncated, 2 is returned. */

class Solution 
{
public:
    int mySqrt(int x) {  //implementing binary search. Square-rooting a number is essentially finding the middle number b/w 1 and x-1;
        if(x==0 || x==1)
            return x;
        int a=1;
        int b=x-1;
         int ans;
        while(a<=b)
        {
           int mid=(a+b)/2;
            if(mid==x/mid)
                return mid;
            else if(mid > x/mid)
            {
                b=mid-1;
            }
            else
            {
                a=mid+1;
               ans=mid;
            }
            
        }
        return ans;
    }
};
