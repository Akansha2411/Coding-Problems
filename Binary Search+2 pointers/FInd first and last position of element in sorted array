/* https://leetcode.com/problems/find-first-and-last-position-of-element-in-sorted-array/
Given an array of integers nums sorted in ascending order, find the starting and ending position of a given target value.

Your algorithm's runtime complexity must be in the order of O(log n).

If the target is not found in the array, return [-1, -1].

Example 1:

Input: nums = [5,7,7,8,8,10], target = 8
Output: [3,4]
Example 2:

Input: nums = [5,7,7,8,8,10], target = 6
Output: [-1,-1] */

class Solution {
public:
    vector<int> searchRange(vector<int>& nums, int target) 
    {
        vector<int>:: iterator it = lower_bound(nums.begin(),nums.end(),target);
        vector<int> res;int y = -1;
        if(!binary_search(nums.begin(),nums.end(),target))
        {
            res.push_back(y);
            res.push_back(y);
        }
        else
        {
            int first = (it-nums.begin());
            vector<int>:: iterator it2 = upper_bound(nums.begin(),nums.end(),target);
            int last = (it2 - nums.begin())-1;
            res.push_back(first);
            res.push_back(last);
        }
        
        return res;
        
    }
};
